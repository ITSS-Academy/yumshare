
/* You can add global styles to this file, and also import other style files */

@use "@angular/material" as mat;

// ===== Z-INDEX HIERARCHY SYSTEM =====
/*
Z-Index Scale:
1-10: Base elements (headers, nav, footers)
11-20: Overlays and dropdowns
21-30: Modals and dialogs
31-40: Tooltips and popovers
41-50: Notifications and toasts
51-60: Mobile overlays
61-70: Fixed elements (hamburger menu, floating buttons)
71-80: Critical overlays (loading, error states)
81-90: Reserved
91-100: Emergency (errors, alerts)
*/

// Z-Index Variables
:root, :host {
  --z-base: 1;
  --z-sticky: 10;
  --z-dropdown: 20;
  --z-modal: 30;
  --z-tooltip: 40;
  --z-notification: 50;
  --z-mobile-overlay: 60;
  --z-fixed: 70;
  --z-critical: 80;
  --z-emergency: 100;
}

.dark {
  --z-base: 1;
  --z-sticky: 10;
  --z-dropdown: 20;
  --z-modal: 30;
  --z-tooltip: 40;
  --z-notification: 50;
  --z-mobile-overlay: 60;
  --z-fixed: 70;
  --z-critical: 80;
  --z-emergency: 100;
}

// Global reset and layout styles

/* Light Theme - Unified Color System */
:root, :host {
  // ===== PRIMARY COLORS =====
  --primary: #8DC63F;
  --primary-dark: #7FC520;
  --primary-light: #92da37;
  --primary-lighter: #e8f5d8;
  --primary-lightest: #f0f8e6;

  // ===== SEMANTIC COLORS =====
  --success: #4CAF50;
  --success-dark: #388E3C;
  --success-light: #81C784;
  --success-on: #ffffff;

  --error: #F44336;
  --error-dark: #D32F2F;
  --error-light: #EF5350;
  --error-on: #ffffff;

  --warning: #FF9800;
  --warning-dark: #F57C00;
  --warning-light: #FFB74D;
  --warning-on: #ffffff;

  --info: #2196F3;
  --info-dark: #1976D2;
  --info-light: #64B5F6;
  --info-on: #ffffff;

  // ===== TEXT COLORS =====
  --text-primary: #1c1c1a;      // Main text
  --text-secondary: #555;       // Secondary text
  --text-muted: #666;           // Muted text
  --text-light: #999;           // Light text
  --text-disabled: #ccc;        // Disabled text

  // ===== SURFACE COLORS =====
  --background: #fcf9f6;        // Page background
  --surface: #ffffff;           // Card/surface background
  --surface-variant: #f8faf5;   // Alternative surface
  --surface-hover: #f5f5f5;     // Hover state
  --surface-active: #eeeeee;    // Active state

  // ===== BORDER COLORS =====
  --border: #e0e0e0;            // Default border
  --border-light: #f0f0f0;      // Light border
  --border-dark: #bdbdbd;       // Dark border

  // ===== SHADOW COLORS =====
  --shadow-light: rgba(0, 0, 0, 0.04);
  --shadow-medium: rgba(0, 0, 0, 0.08);
  --shadow-strong: rgba(0, 0, 0, 0.12);
  --shadow-heavy: rgba(0, 0, 0, 0.16);

  @include mat.theme-overrides((
    primary: var(--primary),
    on-primary: var(--text-primary),
    primary-container: var(--primary-lighter),
    on-primary-container: var(--text-secondary),
    inverse-primary: var(--primary-light),
    primary-fixed: var(--primary-lighter),
    primary-fixed-dim: var(--primary-light),
    on-primary-fixed: var(--text-secondary),
    on-primary-fixed-variant: var(--text-muted),
    secondary: var(--primary-dark),
    on-secondary: var(--text-primary),
    secondary-container: var(--primary-lightest),
    on-secondary-container: var(--text-secondary),
    secondary-fixed: var(--primary-lightest),
    secondary-fixed-dim: var(--primary-lighter),
    on-secondary-fixed: var(--text-secondary),
    on-secondary-fixed-variant: var(--text-muted),
    tertiary: var(--success),
    on-tertiary: var(--text-primary),
    tertiary-container: var(--success-light),
    on-tertiary-container: var(--text-secondary),
    tertiary-fixed: var(--success-light),
    tertiary-fixed-dim: var(--success),
    on-tertiary-fixed: var(--text-secondary),
    on-tertiary-fixed-variant: var(--text-muted),
    background: var(--background),
    on-background: var(--text-primary),
    surface: var(--surface),
    surface-dim: var(--border-dark),
    surface-bright: var(--surface),
    surface-container-lowest: var(--surface),
    surface-container-low: var(--border-light),
    surface-container: var(--surface-variant),
    surface-container-high: var(--border-light),
    surface-container-highest: var(--surface-hover),
    on-surface: var(--text-primary),
    shadow: rgba(0, 0, 0, 0.2),
    scrim: rgba(0, 0, 0, 0.32),
    surface-tint: var(--primary),
    inverse-surface: var(--text-primary),
    inverse-on-surface: var(--background),
    outline: var(--border),
    outline-variant: var(--border-light),
    neutral: var(--text-secondary),
    neutral10: var(--text-primary),
    error: var(--error),
    error-container: var(--error-light),
    on-error: var(--error-on),
    on-error-container: var(--error-on),
    surface-variant: var(--surface-variant),
    on-surface-variant: var(--text-secondary),
    neutral-variant: var(--border),
    neutral-variant20: var(--text-muted),
    inverse-secondary: var(--primary-lighter),
    inverse-tertiary: var(--success-light),
  ));
}

/* Dark Theme - Unified Color System */
.dark {
  // ===== PRIMARY COLORS =====
  --primary: #92da37;
  --primary-dark: #8DC63F;
  --primary-light: #7FC520;
  --primary-lighter: #2e4f00;
  --primary-lightest: #1f3700;

  // ===== SEMANTIC COLORS =====
  --success: #81C784;
  --success-dark: #4CAF50;
  --success-light: #A5D6A7;
  --success-on: #000000;

  --error: #EF5350;
  --error-dark: #F44336;
  --error-light: #E57373;
  --error-on: #000000;

  --warning: #FFB74D;
  --warning-dark: #FF9800;
  --warning-light: #FFD54F;
  --warning-on: #000000;

  --info: #64B5F6;
  --info-dark: #2196F3;
  --info-light: #90CAF9;
  --info-on: #000000;

  // ===== TEXT COLORS =====
  --text-primary: #e5e2df;       // Main text
  --text-secondary: #c6c7bd;    // Secondary text
  --text-muted: #909189;        // Muted text
  --text-light: #787775;        // Light text
  --text-disabled: #666;        // Disabled text

  // ===== SURFACE COLORS =====
  --background: #131312;        // Page background
  --surface: #20201e;           // Card/surface background
  --surface-variant: #454840;   // Alternative surface
  --surface-hover: #2a2a29;     // Hover state
  --surface-active: #353533;    // Active state

  // ===== BORDER COLORS =====
  --border: #454840;            // Default border
  --border-light: #5a5a58;       // Light border
  --border-dark: #909189;        // Dark border

  // ===== SHADOW COLORS =====
  --shadow-light: rgba(0, 0, 0, 0.2);
  --shadow-medium: rgba(0, 0, 0, 0.3);
  --shadow-strong: rgba(0, 0, 0, 0.4);
  --shadow-heavy: rgba(0, 0, 0, 0.5);

  @include mat.theme-overrides((
    primary: var(--primary),
    on-primary: var(--text-primary),
    primary-container: var(--primary-lighter),
    on-primary-container: var(--text-secondary),
    inverse-primary: var(--primary-dark),
    primary-fixed: var(--primary-lighter),
    primary-fixed-dim: var(--primary),
    on-primary-fixed: var(--text-secondary),
    on-primary-fixed-variant: var(--text-muted),
    secondary: var(--primary-light),
    on-secondary: var(--text-primary),
    secondary-container: var(--primary-lightest),
    on-secondary-container: var(--text-secondary),
    secondary-fixed: var(--primary-lightest),
    secondary-fixed-dim: var(--primary-lighter),
    on-secondary-fixed: var(--text-secondary),
    on-secondary-fixed-variant: var(--text-muted),
    tertiary: var(--success),
    on-tertiary: var(--text-primary),
    tertiary-container: var(--success-light),
    on-tertiary-container: var(--text-secondary),
    tertiary-fixed: var(--success-light),
    tertiary-fixed-dim: var(--success),
    on-tertiary-fixed: var(--text-secondary),
    on-tertiary-fixed-variant: var(--text-muted),
    background: var(--background),
    on-background: var(--text-primary),
    surface: var(--surface),
    surface-dim: var(--surface),
    surface-bright: var(--surface-active),
    surface-container-lowest: var(--background),
    surface-container-low: var(--surface),
    surface-container: var(--surface-variant),
    surface-container-high: var(--surface-hover),
    surface-container-highest: var(--surface-active),
    on-surface: var(--text-primary),
    shadow: rgba(0, 0, 0, 0.4),
    scrim: rgba(0, 0, 0, 0.6),
    surface-tint: var(--primary),
    inverse-surface: var(--background),
    inverse-on-surface: var(--text-primary),
    outline: var(--border),
    outline-variant: var(--border-light),
    neutral: var(--text-secondary),
    neutral10: var(--text-primary),
    error: var(--error),
    error-container: var(--error-light),
    on-error: var(--error-on),
    on-error-container: var(--error-on),
    surface-variant: var(--surface-variant),
    on-surface-variant: var(--text-secondary),
    neutral-variant: var(--border),
    neutral-variant20: var(--text-muted),
    inverse-secondary: var(--primary-lighter),
    inverse-tertiary: var(--success-light),
  ));
}

/* Typography */
:root, :host {
  /* core typography tokens are not generating css variables, hence below */
  --mat-sys-brand-font-family: Noto Sans;
  --mat-sys-plain-font-family: Noto Sans;
  --mat-sys-bold-font-weight: 700;
  --mat-sys-medium-font-weight: 500;
  --mat-sys-regular-font-weight: 400;

  @include mat.theme-overrides((
    brand-family: Noto Sans,
    plain-family: Noto Sans,
    bold-weight: 700,
    medium-weight: 500,
    regular-weight: 400,
    headline-large-font: var(--mat-sys-brand-font-family),
    headline-medium-font: var(--mat-sys-brand-font-family),
    headline-small-font: var(--mat-sys-brand-font-family),
    display-large-font: var(--mat-sys-brand-font-family),
    display-medium-font: var(--mat-sys-brand-font-family),
    display-small-font: var(--mat-sys-brand-font-family),
    title-large-font: var(--mat-sys-brand-font-family),
    body-large: var(--mat-sys-body-large-weight) var(--mat-sys-body-large-size) / var(--mat-sys-body-large-line-height) var(--mat-sys-body-large-font),
    body-medium: var(--mat-sys-body-medium-weight) var(--mat-sys-body-medium-size) / var(--mat-sys-body-medium-line-height) var(--mat-sys-body-medium-font),
    body-small: var(--mat-sys-body-small-weight) var(--mat-sys-body-small-size) / var(--mat-sys-body-small-line-height) var(--mat-sys-body-small-font),
    label-large: var(--mat-sys-label-large-weight) var(--mat-sys-label-large-size) / var(--mat-sys-label-large-line-height) var(--mat-sys-label-large-font),
    label-medium: var(--mat-sys-label-medium-weight) var(--mat-sys-label-medium-size) / var(--mat-sys-label-medium-line-height) var(--mat-sys-label-medium-font),
    label-small: var(--mat-sys-label-small-weight) var(--mat-sys-label-small-size) / var(--mat-sys-label-small-line-height) var(--mat-sys-label-small-font),
    title-large: var(--mat-sys-title-large-weight) var(--mat-sys-title-large-size) / var(--mat-sys-title-large-line-height) var(--mat-sys-title-large-font),
    title-medium: var(--mat-sys-title-medium-weight) var(--mat-sys-title-medium-size) / var(--mat-sys-title-medium-line-height) var(--mat-sys-title-medium-font),
    title-small: var(--mat-sys-title-small-weight) var(--mat-sys-title-small-size) / var(--mat-sys-title-small-line-height) var(--mat-sys-title-small-font),
    headline-large: var(--mat-sys-headline-large-weight) var(--mat-sys-headline-large-size) / var(--mat-sys-headline-large-line-height) var(--mat-sys-headline-large-font),
    headline-medium: var(--mat-sys-headline-medium-weight) var(--mat-sys-headline-medium-size) / var(--mat-sys-headline-medium-line-height) var(--mat-sys-headline-medium-font),
    headline-small: var(--mat-sys-headline-small-weight) var(--mat-sys-headline-small-size) / var(--mat-sys-headline-small-line-height) var(--mat-sys-headline-small-font),
    display-large: var(--mat-sys-display-large-weight) var(--mat-sys-display-large-size) / var(--mat-sys-display-large-line-height) var(--mat-sys-display-large-font),
    display-medium: var(--mat-sys-display-medium-weight) var(--mat-sys-display-medium-size) / var(--mat-sys-display-medium-line-height) var(--mat-sys-display-medium-font),
    display-small: var(--mat-sys-display-small-weight) var(--mat-sys-display-small-size) / var(--mat-sys-display-small-line-height) var(--mat-sys-display-small-font),
    body-large-font: var(--mat-sys-plain-font-family),
    body-medium-font: var(--mat-sys-plain-font-family),
    body-small-font: var(--mat-sys-plain-font-family),
    label-large-font: var(--mat-sys-plain-font-family),
    label-medium-font: var(--mat-sys-plain-font-family),
    label-small-font: var(--mat-sys-plain-font-family),
    title-medium-font: var(--mat-sys-plain-font-family),
    title-small-font: var(--mat-sys-plain-font-family),
    label-large-weight-prominent: var(--mat-sys-bold-font-weight),
    label-medium-weight-prominent: var(--mat-sys-bold-font-weight),
    label-large-weight: var(--mat-sys-medium-font-weight),
    label-medium-weight: var(--mat-sys-medium-font-weight),
    label-small-weight: var(--mat-sys-medium-font-weight),
    title-medium-weight: var(--mat-sys-medium-font-weight),
    title-small-weight: var(--mat-sys-medium-font-weight),
    body-large-weight: var(--mat-sys-regular-font-weight),
    body-medium-weight: var(--mat-sys-regular-font-weight),
    body-small-weight: var(--mat-sys-regular-font-weight),
    display-large-weight: var(--mat-sys-regular-font-weight),
    display-medium-weight: var(--mat-sys-regular-font-weight),
    display-small-weight: var(--mat-sys-regular-font-weight),
    headline-large-weight: var(--mat-sys-regular-font-weight),
    headline-medium-weight: var(--mat-sys-regular-font-weight),
    headline-small-weight: var(--mat-sys-regular-font-weight),
    title-large-weight: var(--mat-sys-regular-font-weight),
  ));
}
html, body { 
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body { 
  font-family: Noto Sans, sans-serif; 
}

* {
  box-sizing: border-box;
}

.custom-dialog .mat-mdc-dialog-container {
  padding: 0;
  border-radius: 12px;
  overflow: hidden;
}

// Đảm bảo container của snackbar là flex row, căn giữa các thành phần
.snackbar-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  width: 100%;
  gap: 8px;
}

.mat-mdc-snack-bar-container.custom-snackbar {
  padding: 0;
  min-width: unset !important;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

// CSS cho thông báo thành công
.mat-mdc-snack-bar-container.success-snackbar .mdc-snackbar__surface {
  background-color: var(--success);
  color: var(--success-on);
  border-radius: 8px;
}

// CSS cho thông báo lỗi
.mat-mdc-snack-bar-container.error-snackbar .mdc-snackbar__surface {
  background-color: var(--error);
  color: var(--error-on);
  border-radius: 8px;
}

// CSS cho thông báo cảnh báo
.mat-mdc-snack-bar-container.warning-snackbar .mdc-snackbar__surface {
  background-color: var(--warning);
  color: var(--warning-on);
  border-radius: 8px;
}

// CSS cho thông báo thông tin
.mat-mdc-snack-bar-container.info-snackbar .mdc-snackbar__surface {
  background-color: var(--info);
  color: var(--info-on);
  border-radius: 8px;
}

// Định nghĩa style cho icon và text bên trong component
.snackbar-icon {
  margin-right: 12px;
  font-size: 24px;
  vertical-align: middle;
  display: flex;
  align-items: center;
}

.snackbar-message {
  flex-grow: 1;
  font-size: 16px;
  font-weight: 500;
  display: flex;
  align-items: center;
}

// Đảm bảo label trong snackbar căn giữa icon và text
.mat-mdc-snack-bar-container .mdc-snackbar__label {
  display: flex !important;
  align-items: center !important;
  flex-direction: row !important;
  justify-content: flex-start;
  gap: 0;
}

// ===== UNIFIED COLOR UTILITY CLASSES =====

// ===== TEXT COLORS =====
.text-primary { color: var(--text-primary) !important; }
.text-secondary { color: var(--text-secondary) !important; }
.text-muted { color: var(--text-muted) !important; }
.text-light { color: var(--text-light) !important; }
.text-disabled { color: var(--text-disabled) !important; }

// ===== PRIMARY COLORS =====
.text-primary-color { color: var(--primary) !important; }
.text-primary-dark { color: var(--primary-dark) !important; }
.text-primary-light { color: var(--primary-light) !important; }

// ===== SEMANTIC COLORS =====
.text-success { color: var(--success) !important; }
.text-success-dark { color: var(--success-dark) !important; }
.text-success-light { color: var(--success-light) !important; }
.text-success-on { color: var(--success-on) !important; }

.text-error { color: var(--error) !important; }
.text-error-dark { color: var(--error-dark) !important; }
.text-error-light { color: var(--error-light) !important; }
.text-error-on { color: var(--error-on) !important; }

.text-warning { color: var(--warning) !important; }
.text-warning-dark { color: var(--warning-dark) !important; }
.text-warning-light { color: var(--warning-light) !important; }
.text-warning-on { color: var(--warning-on) !important; }

.text-info { color: var(--info) !important; }
.text-info-dark { color: var(--info-dark) !important; }
.text-info-light { color: var(--info-light) !important; }
.text-info-on { color: var(--info-on) !important; }

// ===== BACKGROUND COLORS =====
.bg-primary { background-color: var(--primary) !important; }
.bg-primary-dark { background-color: var(--primary-dark) !important; }
.bg-primary-light { background-color: var(--primary-light) !important; }
.bg-primary-lighter { background-color: var(--primary-lighter) !important; }
.bg-primary-lightest { background-color: var(--primary-lightest) !important; }

.bg-success { background-color: var(--success) !important; }
.bg-error { background-color: var(--error) !important; }
.bg-warning { background-color: var(--warning) !important; }
.bg-info { background-color: var(--info) !important; }

.bg-surface { background-color: var(--surface) !important; }
.bg-surface-variant { background-color: var(--surface-variant) !important; }
.bg-surface-hover { background-color: var(--surface-hover) !important; }
.bg-surface-active { background-color: var(--surface-active) !important; }

.bg-background { background-color: var(--background) !important; }

// ===== BORDER COLORS =====
.border-primary { border-color: var(--primary) !important; }
.border-primary-dark { border-color: var(--primary-dark) !important; }
.border-success { border-color: var(--success) !important; }
.border-error { border-color: var(--error) !important; }
.border-warning { border-color: var(--warning) !important; }
.border-info { border-color: var(--info) !important; }

.border-default { border-color: var(--border) !important; }
.border-light { border-color: var(--border-light) !important; }
.border-dark { border-color: var(--border-dark) !important; }

// ===== GRADIENT UTILITIES =====
.gradient-primary {
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%) !important;
}
.gradient-primary-horizontal {
  background: linear-gradient(90deg, var(--primary) 0%, var(--primary-dark) 100%) !important;
}
.gradient-primary-light {
  background: linear-gradient(135deg, var(--primary-lighter) 0%, var(--primary-lightest) 100%) !important;
}

.gradient-success {
  background: linear-gradient(135deg, var(--success) 0%, var(--success-dark) 100%) !important;
}
.gradient-error {
  background: linear-gradient(135deg, var(--error) 0%, var(--error-dark) 100%) !important;
}
.gradient-warning {
  background: linear-gradient(135deg, var(--warning) 0%, var(--warning-dark) 100%) !important;
}

// ===== SHADOW UTILITIES =====
.shadow-light { box-shadow: 0 1px 3px var(--shadow-light) !important; }
.shadow-medium { box-shadow: 0 2px 6px var(--shadow-medium) !important; }
.shadow-strong { box-shadow: 0 4px 12px var(--shadow-strong) !important; }
.shadow-heavy { box-shadow: 0 8px 24px var(--shadow-heavy) !important; }

// ===== HOVER EFFECTS =====
.hover-text-primary:hover {
  color: var(--primary) !important;
  transition: color 0.3s ease;
}
.hover-bg-primary:hover {
  background-color: var(--primary-lighter) !important;
  transition: background-color 0.3s ease;
}
.hover-bg-surface:hover {
  background-color: var(--surface-hover) !important;
  transition: background-color 0.3s ease;
}
.hover-scale:hover {
  transform: scale(1.05);
  transition: transform 0.3s ease;
}

// ===== FOCUS STATES =====
.focus-primary:focus {
  outline: 2px solid var(--primary) !important;
  outline-offset: 2px;
}
.focus-error:focus {
  outline: 2px solid var(--error) !important;
  outline-offset: 2px;
}

// ===== SCROLL BEHAVIOR OPTIMIZATION =====
/*
Global scroll behavior for better UX:
- Smooth scrolling on desktop
- Auto-scrolling on mobile for performance
- Custom scrollbar styling
- Reduced motion support
*/

// Global scroll behavior
* {
  scroll-behavior: smooth;
}

// Reduce motion for accessibility
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// Custom scrollbar for webkit browsers
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--surface-hover);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: var(--border);
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--border-dark);
}

// Firefox scrollbar
* {
  scrollbar-width: thin;
  scrollbar-color: var(--border) var(--surface-hover);
}

// Mobile optimizations
@media (max-width: 768px) {
  * {
    scroll-behavior: auto; // Better performance on mobile
    -webkit-overflow-scrolling: touch; // Smooth iOS scrolling
  }
}

// ===== LEGACY SUPPORT =====
.text-success-color { color: var(--success) !important; }
.text-error-color { color: var(--error) !important; }
.text-warning-color { color: var(--warning) !important; }
.bg-success-color { background-color: var(--success) !important; }
.bg-error-color { background-color: var(--error) !important; }
.bg-warning-color { background-color: var(--warning) !important; }

// ===== SNACKBAR UTILITY CLASSES =====
.snackbar-success { @extend .success-snackbar; }
.snackbar-error { @extend .error-snackbar; }
.snackbar-warning { @extend .warning-snackbar; }
.snackbar-info { @extend .info-snackbar; }

// ===== MESSAGE DIALOG STYLES =====
.message-dialog {
  .mat-mdc-dialog-container {
    padding: 0 !important;
    border-radius: var(--radius-xl) !important;
    box-shadow: var(--shadow-heavy) !important;
    max-height: 80vh !important;
    overflow: hidden !important;
  }
  
  .mat-mdc-dialog-content {
    padding: 0 !important;
    margin: 0 !important;
    max-height: none !important;
    overflow: visible !important;
  }
  
  .mat-mdc-dialog-actions {
    padding: var(--spacing-md) !important;
    border-top: 1px solid var(--border) !important;
    background: var(--surface-variant) !important;
  }
}

// ===== NOTIFICATION TOAST STYLES =====
.notification-toast {
  z-index: var(--z-notification) !important;
  
  .mdc-snackbar__surface {
    background: var(--surface) !important;
    color: var(--text-primary) !important;
    border: 1px solid var(--primary) !important;
    border-radius: 12px !important;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;
    max-width: 400px !important;
    min-width: 300px !important;
  }
  
  .mdc-snackbar__label {
    padding: 16px !important;
    font-size: 14px !important;
    line-height: 1.4 !important;
  }
  
  .mdc-snackbar__actions {
    padding: 8px 16px 16px !important;
  }
  
  .mat-mdc-button {
    color: var(--primary) !important;
    font-weight: 500 !important;
  }
}

.unread-notification {
  .mdc-snackbar__surface {
    border-left: 4px solid var(--primary) !important;
    background: var(--primary-lightest) !important;
  }
}

// Animation for notification toast
.notification-toast {
  animation: slideInFromRight 0.3s var(--animation-easing) !important;
}

@keyframes slideInFromRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

// ===== ADVANCED ANIMATIONS =====

// Animation timing functions
:root {
  --animation-duration-fast: 150ms;
  --animation-duration-normal: 300ms;
  --animation-duration-slow: 500ms;
  --animation-easing: cubic-bezier(0.4, 0, 0.2, 1);
  --animation-easing-emphasized: cubic-bezier(0.05, 0.7, 0.1, 1);
  --animation-easing-decelerate: cubic-bezier(0, 0, 0.2, 1);
}

// Base animation classes
.animate-fade-in {
  animation: fadeIn var(--animation-duration-normal) var(--animation-easing);
}

.animate-slide-up {
  animation: slideUp var(--animation-duration-normal) var(--animation-easing);
}

.animate-slide-down {
  animation: slideDown var(--animation-duration-normal) var(--animation-easing);
}

.animate-scale-in {
  animation: scaleIn var(--animation-duration-normal) var(--animation-easing);
}

.animate-bounce-in {
  animation: bounceIn 600ms var(--animation-easing-emphasized);
}

// Keyframe definitions
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

// Hover animations
.hover-lift {
  transition: transform var(--animation-duration-fast) var(--animation-easing),
              box-shadow var(--animation-duration-fast) var(--animation-easing);
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.hover-scale {
  transition: transform var(--animation-duration-fast) var(--animation-easing);
}

.hover-scale:hover {
  transform: scale(1.02);
}

.hover-glow {
  transition: box-shadow var(--animation-duration-fast) var(--animation-easing);
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(141, 198, 63, 0.3);
}

// Loading animations
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

.loading-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.loading-shimmer {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-size: 200px 100%;
  animation: shimmer 1.5s infinite;
}

// Button animations
.btn-press {
  transition: transform var(--animation-duration-fast) var(--animation-easing);
}

.btn-press:active {
  transform: scale(0.95);
}

.btn-ripple {
  position: relative;
  overflow: hidden;
}

.btn-ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.3s, height 0.3s;
}

.btn-ripple:active::before {
  width: 300px;
  height: 300px;
}

// Page transition animations
.page-enter {
  animation: pageEnter var(--animation-duration-slow) var(--animation-easing);
}

.page-exit {
  animation: pageExit var(--animation-duration-normal) var(--animation-easing);
}

@keyframes pageEnter {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pageExit {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

// Stagger animations for lists
.stagger-item {
  opacity: 0;
  transform: translateY(20px);
  animation: staggerIn var(--animation-duration-normal) var(--animation-easing) both;
}

.stagger-item:nth-child(1) { animation-delay: 0ms; }
.stagger-item:nth-child(2) { animation-delay: 100ms; }
.stagger-item:nth-child(3) { animation-delay: 200ms; }
.stagger-item:nth-child(4) { animation-delay: 300ms; }
.stagger-item:nth-child(5) { animation-delay: 400ms; }
.stagger-item:nth-child(6) { animation-delay: 500ms; }
.stagger-item:nth-child(7) { animation-delay: 600ms; }
.stagger-item:nth-child(8) { animation-delay: 700ms; }

@keyframes staggerIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Accessibility: Respect reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .animate-fade-in,
  .animate-slide-up,
  .animate-slide-down,
  .animate-scale-in,
  .animate-bounce-in,
  .hover-lift,
  .hover-scale,
  .hover-glow,
  .loading-pulse,
  .loading-shimmer,
  .btn-press,
  .page-enter,
  .page-exit {
    animation: none !important;
    transition: none !important;
  }

  .stagger-item {
    animation: none !important;
    opacity: 1 !important;
    transform: none !important;
  }
}

// Performance optimizations
.will-animate {
  will-change: transform, opacity;
}

.will-animate:hover {
  will-change: auto;
}

// GPU acceleration for better performance
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// ===== SPACING SYSTEM =====
:root {
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  --spacing-xxl: 48px;
  --spacing-xxxl: 64px;
}

// ===== BORDER RADIUS SYSTEM =====
:root {
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
  --radius-xxl: 20px;
  --radius-round: 50%;
}

// ===== BUTTON COMPONENT SYSTEM =====

// Base button mixin
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: var(--radius-md);
  font-family: var(--mat-sys-plain-font-family);
  font-weight: var(--mat-sys-medium-font-weight);
  text-decoration: none;
  cursor: pointer;
  transition: all var(--animation-duration-fast) var(--animation-easing);
  user-select: none;
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &:focus {
    outline: 2px solid var(--primary);
    outline-offset: 2px;
  }
}

// Button size variants
@mixin button-size($padding-y, $padding-x, $font-size, $min-height) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  min-height: $min-height;
  
  mat-icon {
    font-size: $font-size;
    width: $font-size;
    height: $font-size;
    margin-right: var(--spacing-sm);
  }
}

// Button style variants
@mixin button-primary {
  @include button-base;
  background: var(--primary);
  color: white;
  box-shadow: 0 2px 4px rgba(141, 198, 63, 0.2);
  
  &:hover:not(:disabled) {
    background: var(--primary-dark);
    box-shadow: 0 4px 8px rgba(141, 198, 63, 0.3);
    transform: translateY(-1px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(141, 198, 63, 0.2);
  }
}

@mixin button-secondary {
  @include button-base;
  background: transparent;
  color: var(--primary);
  border: 2px solid var(--primary);
  
  &:hover:not(:disabled) {
    background: var(--primary-lighter);
    transform: translateY(-1px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-outline {
  @include button-base;
  background: transparent;
  color: var(--text-primary);
  border: 1px solid var(--border);
  
  &:hover:not(:disabled) {
    background: var(--surface-hover);
    border-color: var(--primary);
    color: var(--primary);
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: var(--text-secondary);
  border: none;
  
  &:hover:not(:disabled) {
    background: var(--surface-hover);
    color: var(--text-primary);
  }
}

@mixin button-danger {
  @include button-base;
  background: var(--error);
  color: var(--error-on);
  box-shadow: 0 2px 4px rgba(244, 67, 54, 0.2);
  
  &:hover:not(:disabled) {
    background: var(--error-dark);
    box-shadow: 0 4px 8px rgba(244, 67, 54, 0.3);
    transform: translateY(-1px);
  }
}

@mixin button-success {
  @include button-base;
  background: var(--success);
  color: var(--success-on);
  box-shadow: 0 2px 4px rgba(76, 175, 80, 0.2);
  
  &:hover:not(:disabled) {
    background: var(--success-dark);
    box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
    transform: translateY(-1px);
  }
}

// Button size classes
.btn-xs {
  @include button-size(var(--spacing-xs), var(--spacing-sm), 12px, 24px);
}

.btn-sm {
  @include button-size(var(--spacing-sm), var(--spacing-md), 14px, 32px);
}

.btn-md {
  @include button-size(var(--spacing-sm), var(--spacing-lg), 16px, 40px);
}

.btn-lg {
  @include button-size(var(--spacing-md), var(--spacing-xl), 18px, 48px);
}

.btn-xl {
  @include button-size(var(--spacing-lg), var(--spacing-xxl), 20px, 56px);
}

// Button style classes
.btn-primary {
  @include button-primary;
}

.btn-secondary {
  @include button-secondary;
}

.btn-outline {
  @include button-outline;
}

.btn-ghost {
  @include button-ghost;
}

.btn-danger {
  @include button-danger;
}

.btn-success {
  @include button-success;
}

// Button with icon only
.btn-icon {
  @include button-base;
  background: transparent;
  color: var(--text-secondary);
  border: none;
  border-radius: var(--radius-round);
  padding: var(--spacing-sm);
  min-width: 40px;
  min-height: 40px;
  
  &:hover:not(:disabled) {
    background: var(--surface-hover);
    color: var(--text-primary);
  }
  
  mat-icon {
    margin: 0;
  }
}

// Button with icon and text
.btn-icon-text {
  mat-icon {
    margin-right: var(--spacing-sm);
  }
  
  &.btn-icon-text-reverse {
    mat-icon {
      margin-right: 0;
      margin-left: var(--spacing-sm);
    }
  }
}

// ===== SPACING UTILITY CLASSES =====

// Padding utilities
.p-xs { padding: var(--spacing-xs) !important; }
.p-sm { padding: var(--spacing-sm) !important; }
.p-md { padding: var(--spacing-md) !important; }
.p-lg { padding: var(--spacing-lg) !important; }
.p-xl { padding: var(--spacing-xl) !important; }
.p-xxl { padding: var(--spacing-xxl) !important; }
.p-xxxl { padding: var(--spacing-xxxl) !important; }

// Padding top/bottom
.py-xs { padding-top: var(--spacing-xs) !important; padding-bottom: var(--spacing-xs) !important; }
.py-sm { padding-top: var(--spacing-sm) !important; padding-bottom: var(--spacing-sm) !important; }
.py-md { padding-top: var(--spacing-md) !important; padding-bottom: var(--spacing-md) !important; }
.py-lg { padding-top: var(--spacing-lg) !important; padding-bottom: var(--spacing-lg) !important; }
.py-xl { padding-top: var(--spacing-xl) !important; padding-bottom: var(--spacing-xl) !important; }

// Padding left/right
.px-xs { padding-left: var(--spacing-xs) !important; padding-right: var(--spacing-xs) !important; }
.px-sm { padding-left: var(--spacing-sm) !important; padding-right: var(--spacing-sm) !important; }
.px-md { padding-left: var(--spacing-md) !important; padding-right: var(--spacing-md) !important; }
.px-lg { padding-left: var(--spacing-lg) !important; padding-right: var(--spacing-lg) !important; }
.px-xl { padding-left: var(--spacing-xl) !important; padding-right: var(--spacing-xl) !important; }

// Margin utilities
.m-xs { margin: var(--spacing-xs) !important; }
.m-sm { margin: var(--spacing-sm) !important; }
.m-md { margin: var(--spacing-md) !important; }
.m-lg { margin: var(--spacing-lg) !important; }
.m-xl { margin: var(--spacing-xl) !important; }
.m-xxl { margin: var(--spacing-xxl) !important; }
.m-xxxl { margin: var(--spacing-xxxl) !important; }

// Margin top/bottom
.my-xs { margin-top: var(--spacing-xs) !important; margin-bottom: var(--spacing-xs) !important; }
.my-sm { margin-top: var(--spacing-sm) !important; margin-bottom: var(--spacing-sm) !important; }
.my-md { margin-top: var(--spacing-md) !important; margin-bottom: var(--spacing-md) !important; }
.my-lg { margin-top: var(--spacing-lg) !important; margin-bottom: var(--spacing-lg) !important; }
.my-xl { margin-top: var(--spacing-xl) !important; margin-bottom: var(--spacing-xl) !important; }

// Margin left/right
.mx-xs { margin-left: var(--spacing-xs) !important; margin-right: var(--spacing-xs) !important; }
.mx-sm { margin-left: var(--spacing-sm) !important; margin-right: var(--spacing-sm) !important; }
.mx-md { margin-left: var(--spacing-md) !important; margin-right: var(--spacing-md) !important; }
.mx-lg { margin-left: var(--spacing-lg) !important; margin-right: var(--spacing-lg) !important; }
.mx-xl { margin-left: var(--spacing-xl) !important; margin-right: var(--spacing-xl) !important; }

// Gap utilities for flex/grid
.gap-xs { gap: var(--spacing-xs) !important; }
.gap-sm { gap: var(--spacing-sm) !important; }
.gap-md { gap: var(--spacing-md) !important; }
.gap-lg { gap: var(--spacing-lg) !important; }
.gap-xl { gap: var(--spacing-xl) !important; }
.gap-xxl { gap: var(--spacing-xxl) !important; }

// ===== BORDER RADIUS UTILITY CLASSES =====

.rounded-sm { border-radius: var(--radius-sm) !important; }
.rounded-md { border-radius: var(--radius-md) !important; }
.rounded-lg { border-radius: var(--radius-lg) !important; }
.rounded-xl { border-radius: var(--radius-xl) !important; }
.rounded-xxl { border-radius: var(--radius-xxl) !important; }
.rounded-full { border-radius: var(--radius-round) !important; }

// Top border radius
.rounded-t-sm { border-top-left-radius: var(--radius-sm) !important; border-top-right-radius: var(--radius-sm) !important; }
.rounded-t-md { border-top-left-radius: var(--radius-md) !important; border-top-right-radius: var(--radius-md) !important; }
.rounded-t-lg { border-top-left-radius: var(--radius-lg) !important; border-top-right-radius: var(--radius-lg) !important; }
.rounded-t-xl { border-top-left-radius: var(--radius-xl) !important; border-top-right-radius: var(--radius-xl) !important; }

// Bottom border radius
.rounded-b-sm { border-bottom-left-radius: var(--radius-sm) !important; border-bottom-right-radius: var(--radius-sm) !important; }
.rounded-b-md { border-bottom-left-radius: var(--radius-md) !important; border-bottom-right-radius: var(--radius-md) !important; }
.rounded-b-lg { border-bottom-left-radius: var(--radius-lg) !important; border-bottom-right-radius: var(--radius-lg) !important; }
.rounded-b-xl { border-bottom-left-radius: var(--radius-xl) !important; border-bottom-right-radius: var(--radius-xl) !important; }

// ===== COMPONENT MIXINS =====

// Card component mixin
@mixin card-base {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-light);
  overflow: hidden;
  transition: all var(--animation-duration-normal) var(--animation-easing);
}

@mixin card-hover {
  &:hover {
    box-shadow: var(--shadow-medium);
    transform: translateY(-2px);
  }
}

@mixin card-elevated {
  box-shadow: var(--shadow-strong);
  
  &:hover {
    box-shadow: var(--shadow-heavy);
    transform: translateY(-4px);
  }
}

// Input component mixin
@mixin input-base {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  font-family: var(--mat-sys-plain-font-family);
  font-size: 16px;
  color: var(--text-primary);
  background: var(--surface);
  transition: all var(--animation-duration-fast) var(--animation-easing);
  
  &:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(141, 198, 63, 0.1);
  }
  
  &:disabled {
    background: var(--surface-hover);
    color: var(--text-disabled);
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: var(--text-muted);
  }
}

// ===== RESPONSIVE UTILITIES =====

// Hide/show utilities
.hidden { display: none !important; }
.visible { display: block !important; }

// Flex utilities
.flex { display: flex !important; }
.flex-col { flex-direction: column !important; }
.flex-row { flex-direction: row !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }

// Justify content
.justify-start { justify-content: flex-start !important; }
.justify-center { justify-content: center !important; }
.justify-end { justify-content: flex-end !important; }
.justify-between { justify-content: space-between !important; }
.justify-around { justify-content: space-around !important; }

// Align items
.items-start { align-items: flex-start !important; }
.items-center { align-items: center !important; }
.items-end { align-items: flex-end !important; }
.items-stretch { align-items: stretch !important; }

// Text alignment
.text-left { text-align: left !important; }
.text-center { text-align: center !important; }
.text-right { text-align: right !important; }
.text-justify { text-align: justify !important; }

// Width utilities
.w-full { width: 100% !important; }
.w-auto { width: auto !important; }
.w-fit { width: fit-content !important; }

// Height utilities
.h-full { height: 100% !important; }
.h-auto { height: auto !important; }
.h-fit { height: fit-content !important; }

// ===== RESPONSIVE BREAKPOINTS =====

// Mobile first approach
@media (max-width: 767px) {
  .hidden-mobile { display: none !important; }
  .visible-mobile { display: block !important; }
  
  .flex-mobile { display: flex !important; }
  .flex-col-mobile { flex-direction: column !important; }
  
  .text-center-mobile { text-align: center !important; }
  .text-left-mobile { text-align: left !important; }
}

@media (min-width: 768px) {
  .hidden-tablet { display: none !important; }
  .visible-tablet { display: block !important; }
  
  .flex-tablet { display: flex !important; }
  .flex-row-tablet { flex-direction: row !important; }
}

@media (min-width: 1024px) {
  .hidden-desktop { display: none !important; }
  .visible-desktop { display: block !important; }
  
  .flex-desktop { display: flex !important; }
  .flex-row-desktop { flex-direction: row !important; }
}