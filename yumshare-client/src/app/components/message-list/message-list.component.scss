// ===== MESSAGE LIST COMPONENT - USING DESIGN SYSTEM =====
@use '../../shared/mixins' as *;

.message-container {
  max-width: 600px;
  margin: 0 auto;
  padding: var(--spacing-md);
  max-height: 70vh;
  overflow-y: auto;
}

.message-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-lg);
  padding-bottom: var(--spacing-md);
  border-bottom: 1px solid var(--border);

  h3 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: var(--mat-sys-medium-font-weight);
    color: var(--text-primary);
  }

  .header-actions {
    display: flex;
    gap: var(--spacing-sm);
  }
}

.loading-container,
.error-container,
.empty-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xxxl) var(--spacing-md);
  text-align: center;

  mat-icon {
    font-size: 48px;
    width: 48px;
    height: 48px;
    margin-bottom: var(--spacing-md);
    opacity: 0.6;
  }

  p {
    margin: var(--spacing-sm) 0;
    font-size: 1.1rem;
    color: var(--text-primary);
  }

  small {
    color: var(--text-secondary);
    margin-top: var(--spacing-sm);
  }

  button {
    margin-top: var(--spacing-md);
  }
}

.messages-list {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.message-item {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-md);
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  background: var(--surface);
  border: 1px solid var(--border);
  cursor: pointer;
  transition: all var(--animation-duration-fast) var(--animation-easing);
  position: relative;

  &:hover {
    background: var(--surface-hover);
    border-color: var(--primary);
    transform: translateY(-1px);
    box-shadow: var(--shadow-strong);
  }

  &.unread {
    background: var(--primary-lightest);
    border-left: 4px solid var(--primary);
    
    &::before {
      content: '';
      position: absolute;
      top: var(--spacing-md);
      right: var(--spacing-md);
      width: var(--spacing-sm);
      height: var(--spacing-sm);
      background: var(--primary);
      border-radius: var(--radius-round);
    }
  }

  .message-icon {
    flex-shrink: 0;
    
    mat-icon {
      font-size: 24px;
      width: 24px;
      height: 24px;
    }
  }

  .message-content {
    flex: 1;
    min-width: 0;

    .message-text {
      margin: 0 0 var(--spacing-sm) 0;
      font-size: 0.95rem;
      line-height: 1.4;
      color: var(--text-primary);
    }

    .message-meta {
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      flex-wrap: wrap;

      .message-time {
        font-size: 0.8rem;
        color: var(--text-secondary);
      }

      mat-chip {
        font-size: 0.7rem;
        height: 20px;
      }
    }
  }

  .message-actions {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    flex-shrink: 0;
    align-items: center;
    justify-content: center;

    button {
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
      line-height: 1;

      mat-icon {
        font-size: 18px;
        width: 18px;
        height: 18px;
        line-height: 1;
      }
    }
  }
}

// Responsive Design
@media (max-width: 600px) {
  .message-container {
    padding: var(--spacing-sm);
  }

  .message-header {
    flex-direction: column;
    gap: var(--spacing-md);
    align-items: stretch;

    .header-actions {
      justify-content: center;
    }
  }

  .message-item {
    padding: var(--spacing-sm);
    gap: var(--spacing-sm);

    .message-icon mat-icon {
      font-size: 20px;
      width: 20px;
      height: 20px;
    }

    .message-content .message-text {
      font-size: 0.9rem;
    }

    .message-actions {
      flex-direction: row;
      gap: var(--spacing-sm);
      align-items: center;
    }
  }
}

// Dark theme support
.dark {
  .message-item {
    background: var(--surface);
    border-color: var(--border);

    &:hover {
      background: var(--surface-hover);
    }

    &.unread {
      background: var(--primary-lightest);
    }
  }
}